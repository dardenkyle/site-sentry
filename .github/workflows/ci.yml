name: CI

on:
  push: { branches: [main] }
  pull_request: { branches: [main] }

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.14" }
      - uses: snok/install-poetry@v1
        with:
          {
            version: latest,
            virtualenvs-create: true,
            virtualenvs-in-project: true,
          }
      - uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.14-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --only=dev --no-root
      - name: Ruff lint
        run: poetry run ruff check .
      - name: Ruff format check
        run: poetry run ruff format --check .

  typecheck:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.14" }
      - uses: snok/install-poetry@v1
        with:
          {
            version: latest,
            virtualenvs-create: true,
            virtualenvs-in-project: true,
          }
      - uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.14-${{ hashFiles('**/poetry.lock') }}
      - run: poetry install --only=dev --no-root
      - name: Mypy
        run: poetry run mypy .

  test:
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: "3.14" }
      - uses: snok/install-poetry@v1
        with:
          {
            version: latest,
            virtualenvs-create: true,
            virtualenvs-in-project: true,
          }
      - uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-3.14-${{ hashFiles('**/poetry.lock') }}
      - run: |
          poetry install --no-root
          poetry run playwright install --with-deps chromium
      - name: Run tests
        run: poetry run pytest -v
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            test-results/
            **/playwright-report/**
          retention-days: 30
